import 'package:ecoleti/blocs/demandesBloc.dart';
import 'package:ecoleti/events/demandesEvents.dart';
import 'package:ecoleti/locators/serviceLocator.dart';
import 'package:ecoleti/models/demandeEnums.dart';
import 'package:ecoleti/pages/newDemandePage.dart';
import 'package:ecoleti/states/demandesStates.dart';
import 'package:ecoleti/themes/globalTheme.dart';
import 'package:flutter/cupertino.dart';
import 'package:flutter/material.dart';
import 'package:flutter/painting.dart';
import 'package:flutter_bloc/flutter_bloc.dart';

class DemandesPage extends StatefulWidget {
  int? selectedTabIndex;
  DemandesPage({this.selectedTabIndex});

  @override
  _DemandesPageState createState() => _DemandesPageState();
}

class _DemandesPageState extends State<DemandesPage>
    with SingleTickerProviderStateMixin {
  TabController? _tabController;
  DemandesBloc _bloc = serviceLocator.get<DemandesBloc>();

  final List<Tab> _tabs = [
    Tab(
      text: 'En cours',
    ),
    Tab(text: 'Historique')
  ];

  @override
  void initState() {
    _bloc.add(DemandesLoadingStartedEvent());
    _tabController = TabController(
        length: _tabs.length,
        vsync: this,
        initialIndex:
            widget.selectedTabIndex != null ? widget.selectedTabIndex! : 0);
    _tabController!.addListener(() {
      _bloc.add(DemandesTabChangedEvent(tab: _tabController!.index));
    });

    super.initState();
  }

  @override
  Widget build(BuildContext context) {
    int _currentStep = 1;
    return Scaffold(
      appBar: AppBar(
        backgroundColor: GlobalTheme.primaryColor,
        title: Text("Demandes"),
        bottom: TabBar(
          controller: _tabController,
          tabs: _tabs,
          indicatorColor: GlobalTheme.secondaryColor,
        ),
      ),
      body: TabBarView(
        controller: _tabController,
        children: [
          SingleChildScrollView(
            child: Container(
              child: Column(
                children: [
                  ExpansionTile(
                    backgroundColor: Colors.white,
                    title: Text(
                      "Demande d'attestation de scolarité",
                      style: TextStyle(
                        color: Colors.black,
                        fontWeight: FontWeight.bold,
                        fontSize: 18,
                      ),
                      textAlign: TextAlign.start,
                    ),
                    children: [
                      Padding(
                        padding: const EdgeInsets.all(8.0),
                        child: Expanded(
                          child: Stepper(
                            steps: <Step>[
                              Step(
                                  title: Text("Demande envoyé"),
                                  content: Align(
                                      alignment: Alignment.topLeft,
                                      child: Column(
                                        children: [
                                          Card(
                                            shape: RoundedRectangleBorder(
                                              borderRadius:
                                                  BorderRadius.circular(15.0),
                                            ),
                                            elevation: 5.0,
                                            child: ClipPath(
                                              clipper: ShapeBorderClipper(
                                                  shape: RoundedRectangleBorder(
                                                      borderRadius:
                                                          BorderRadius.circular(
                                                              10))),
                                              child: Container(
                                                  height: 60,
                                                  decoration: BoxDecoration(
                                                    border: Border(
                                                        left: BorderSide(
                                                            color: GlobalTheme
                                                                .secondaryColor,
                                                            width: 10)),
                                                    color: Colors.white,
                                                  ),
                                                  padding: EdgeInsets.all(10.0),
                                                  alignment:
                                                      Alignment.topCenter,
                                                  child: Container(
                                                    child: Text(
                                                        "Votre demande a été bien reçu. Nous reviendrons vers vous dans un bref délai"),
                                                  )),
                                            ),
                                          )
                                        ],
                                      )),
                                  subtitle: Text("Terminé"),
                                  isActive: true,
                                  state: StepState.complete),
                              Step(
                                  title: Text(""),
                                  content: Card(
                                    shape: RoundedRectangleBorder(
                                      borderRadius: BorderRadius.circular(15.0),
                                    ),
                                    elevation: 5.0,
                                    child: ClipPath(
                                      clipper: ShapeBorderClipper(
                                          shape: RoundedRectangleBorder(
                                              borderRadius:
                                                  BorderRadius.circular(10))),
                                      child: Container(
                                          height: 60,
                                          decoration: BoxDecoration(
                                            border: Border(
                                                left: BorderSide(
                                                    color: GlobalTheme
                                                        .secondaryColor,
                                                    width: 15)),
                                            color: Colors.white,
                                          ),
                                          padding: EdgeInsets.all(10.0),
                                          alignment: Alignment.topCenter,
                                          child: Container(
                                            child: Text(
                                                "Votre demande est en cours de traitement"),
                                          )),
                                    ),
                                  ),
                                  subtitle: Text(""),
                                  isActive: false,
                                  state: StepState.indexed),
                              Step(
                                  title: Text("Photo manquante"),
                                  content:
                                      Text("Votre dossier manque de photo"),
                                  subtitle: Text(""),
                                  isActive: false,
                                  state: StepState.error),
                              Step(
                                  title: Text(""),
                                  content: Text(""),
                                  subtitle: Text(""),
                                  isActive: false,
                                  state: StepState.indexed),
                            ],
                            currentStep: _currentStep,
                            onStepTapped: (index) {
                              setState(() {
                                _currentStep = index;
                              });
                            },
                            controlsBuilder: (BuildContext context,
                                    {VoidCallback? onStepContinue,
                                    VoidCallback? onStepCancel}) =>
                                Container(),
                          ),
                        ),
                      ),
                    ],
                  ),
                  ExpansionTile(
                    backgroundColor: Colors.white,
                    title: Text(
                      'Attestation de reussite',
                      style: TextStyle(
                        color: Colors.black,
                        fontWeight: FontWeight.bold,
                        fontSize: 18,
                      ),
                      textAlign: TextAlign.start,
                    ),
                    children: [
                      Padding(
                        padding: const EdgeInsets.all(8.0),
                        child: Expanded(
                          child: Stepper(
                            steps: <Step>[
                              Step(
                                  title: Text("Demande envoyé"),
                                  content: Align(
                                      alignment: Alignment.topLeft,
                                      child: Column(
                                        children: [
                                          Card(
                                            shape: RoundedRectangleBorder(
                                              borderRadius:
                                                  BorderRadius.circular(15.0),
                                            ),
                                            elevation: 5.0,
                                            child: ClipPath(
                                              clipper: ShapeBorderClipper(
                                                  shape: RoundedRectangleBorder(
                                                      borderRadius:
                                                          BorderRadius.circular(
                                                              10))),
                                              child: Container(
                                                  height: 60,
                                                  decoration: BoxDecoration(
                                                    border: Border(
                                                        left: BorderSide(
                                                            color: GlobalTheme
                                                                .secondaryColor,
                                                            width: 10)),
                                                    color: Colors.white,
                                                  ),
                                                  padding: EdgeInsets.all(10.0),
                                                  alignment:
                                                      Alignment.topCenter,
                                                  child: Container(
                                                    child: Text(
                                                        "Votre demande a été bien reçu. Nous reviendrons vers vous dans un bref délai"),
                                                  )),
                                            ),
                                          )
                                        ],
                                      )),
                                  subtitle: Text("Terminé"),
                                  isActive: true,
                                  state: StepState.complete),
                              Step(
                                  title: Text(""),
                                  content: Card(
                                    shape: RoundedRectangleBorder(
                                      borderRadius: BorderRadius.circular(15.0),
                                    ),
                                    elevation: 5.0,
                                    child: ClipPath(
                                      clipper: ShapeBorderClipper(
                                          shape: RoundedRectangleBorder(
                                              borderRadius:
                                                  BorderRadius.circular(10))),
                                      child: Container(
                                          height: 60,
                                          decoration: BoxDecoration(
                                            border: Border(
                                                left: BorderSide(
                                                    color: GlobalTheme
                                                        .secondaryColor,
                                                    width: 15)),
                                            color: Colors.white,
                                          ),
                                          padding: EdgeInsets.all(10.0),
                                          alignment: Alignment.topCenter,
                                          child: Container(
                                            child: Text(
                                                "Votre demande est en cours de traitement"),
                                          )),
                                    ),
                                  ),
                                  subtitle: Text(""),
                                  isActive: false,
                                  state: StepState.editing),
                              Step(
                                  title: Text(""),
                                  content: Text(""),
                                  subtitle: Text(""),
                                  isActive: false,
                                  state: StepState.complete),
                              Step(
                                  title: Text(""),
                                  content: Text(""),
                                  subtitle: Text(""),
                                  isActive: false,
                                  state: StepState.complete),
                            ],
                            currentStep: _currentStep,
                            onStepTapped: (index) {
                              setState(() {
                                _currentStep = index;
                              });
                            },
                            controlsBuilder: (BuildContext context,
                                    {VoidCallback? onStepContinue,
                                    VoidCallback? onStepCancel}) =>
                                Container(),
                          ),
                        ),
                      ),
                    ],
                  ),
                  Container(
                    width: 400,
                    child:   ElevatedButton(
                      style: ElevatedButton.styleFrom(
                          primary: Colors.green[800]),
                      onPressed: () async {
                        var _resp = await Navigator.push(
                          context,
                          MaterialPageRoute(
                            settings: RouteSettings(name: "NewDemande"),
                            builder: (context) => NewDemandePage(),
                          ),
                        );
                        _bloc.add(DemandesLoadingStartedEvent());
                      },
                      child: Row(
                          mainAxisAlignment: MainAxisAlignment.center,
                          children: [Text("Nouvelle demande",style: TextStyle(fontSize: 20,fontWeight: FontWeight.bold),)])),
                  )
                ],
              ),
            ),
          ),
          /* Container(
            padding: EdgeInsets.all(8),
            child: BlocBuilder(
              bloc: _bloc,
              builder: (context, state) {
                if (state is DemandesLoadedState) {
                  if (state.demandes!.isNotEmpty) {
                    return DemandesList(
                      state: state,
                    );
                  } else {
                    return Container(
                      child: Center(
                        child: Text("Vous n'avez aucune demande"),
                      ),
                    );
                  }Ffla
                }
                return Container();
              },
            ),
          ), */
          Container(
            padding: EdgeInsets.all(8),
            child: BlocBuilder(
              bloc: _bloc,
              builder: (context, state) {
                if (state is DemandesLoadedState) {
                  if (state.demandes!.isNotEmpty) {
                    return DemandesList(
                      state: state,
                    );
                  } else {
                    return Container(
                      child: Center(
                        child: Text("Vous n'avez aucune demande"),
                      ),
                    );
                  }
                }
                return Container();
              },
            ),
          ),
        ],
      ),
      /*   floatingActionButton: FloatingActionButton(
        onPressed: () async {
          var _resp = await Navigator.push(
            context,
            MaterialPageRoute(
              settings: RouteSettings(name: "NewDemande"),
              builder: (context) => NewDemandePage(),
            ),
          );
          _bloc.add(DemandesLoadingStartedEvent());
        },
        child: Icon(Icons.add),
        backgroundColor: GlobalTheme.secondaryColor,
      ), */
    );
  }
}

class DemandesList extends StatelessWidget {
  DemandesLoadedState? state;
  DemandesList({this.state});
  @override
  Widget build(BuildContext context) {
    return ListView.builder(
        itemCount: state!.demandes!.length,
        itemBuilder: (context, index) {
          print(state!.demandes![index].id);
          return Container(
            padding: EdgeInsets.all(20),
            margin: EdgeInsets.only(bottom: 10),
            decoration: BoxDecoration(
                color: Colors.white,
                borderRadius: BorderRadius.circular(10),
                boxShadow: [
                  BoxShadow(
                    color: Colors.grey.withOpacity(.1),
                    spreadRadius: 3,
                    blurRadius: 2,
                    offset: Offset(
                      0,
                      1,
                    ), // changes position of shadow
                  ),
                ]),
            child: Row(
              mainAxisAlignment: MainAxisAlignment.spaceBetween,
              children: [
                Column(
                  crossAxisAlignment: CrossAxisAlignment.start,
                  children: [
                    Text(
                      "${DemandeType.values[state!.demandes![index].type!.index].value} pour ",
                      style: TextStyle(
                        fontSize: 14,
                      ),
                    ),
                    Text(
                      "${state!.demandes![index].student!.firstName} ${state!.demandes![index].student!.lastName}",
                      style: TextStyle(
                        fontWeight: FontWeight.bold,
                        fontSize: 16,
                      ),
                    )
                  ],
                ),
                Container(
                  child: Text(
                      "${DemandeStatus.values[state!.demandes![index].status!.index].value}"),
                )
              ],
            ),
          );
        });
  }
}
