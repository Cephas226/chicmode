import 'package:dio/dio.dart';
import 'package:ecoleti/locators/serviceLocator.dart';
import 'package:ecoleti/models/authenticationResponse.dart';
import 'package:ecoleti/providers/authenticationProvider.dart';
import 'package:flutter/foundation.dart';

class ApiRequest {
  final String url;
  final Map<String, dynamic> data;
  Dio dio = Dio();
  ApiRequest({
    required this.url,
    required this.data,
  });

  _dio() async {
    // Put your authorization token here
    AuthenticationResponse response = await serviceLocator
        .get<AuthenticationProvider>()
        .loadAuthenticationResponse();
    print(response.accessToken);
    Map<String, String> header = <String, String>{
      'Authorization': 'Bearer ' + response.accessToken.toString(),
      'Content-Type': 'application/json'
    };
    return dio.options.headers = header;

    // return Dio(BaseOptions(
    //   headers: {
    //   'Authorization': 'Bearer ' + response.accessToken.toString(),
    //   'Content-Type' : 'application/json'
    // }));
  }

  Future<void> get({
    Function()? beforeSend,
    required Function(dynamic data) onSuccess,
    Function(dynamic error)? onError,
  }) async {
    AuthenticationResponse response = await serviceLocator
        .get<AuthenticationProvider>()
        .loadAuthenticationResponse();
    await Dio(BaseOptions(headers: {
      "Content-Type": "application/json",
      'Authorization': 'Bearer ' + response.accessToken.toString()
    })).get(this.url, queryParameters: this.data).then((res) {
      if (onSuccess != null) onSuccess(res.data);
    }).catchError((error) {
      if (onError != null) onError(error);
    });
  }
}
