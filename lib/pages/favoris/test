import 'package:flutter/material.dart';
import 'package:get/get.dart';
import 'package:getx_app/pages/favoris/favoris_page%20copy.dart';
class FavorisPage extends StatefulWidget {
  @override
  _StepperDemoState createState() => _StepperDemoState();
}

class _StepperDemoState extends State<FavorisPage> {
  int _currentStep = 0;
  StepperType stepperType = StepperType.vertical;

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        automaticallyImplyLeading: false,
        title: Text('Page1'),
        centerTitle: true,
      ),
      body: 
        Theme(  data: ThemeData(
                  accentColor: Colors.orange,
                  primarySwatch: Colors.orange,
                  colorScheme: ColorScheme.light(
                    primary: Colors.orange
                  )
                ),
        child: Container(
        child: Column(
          children: [
           
            Card(
              shape: RoundedRectangleBorder(
                borderRadius: BorderRadius.circular(15.0),
              ),
              elevation: 5.0,
              child: ClipPath(
                clipper: ShapeBorderClipper(
                    shape: RoundedRectangleBorder(
                        borderRadius: BorderRadius.circular(10))),
                child: Container(
                    height: 70,
                    decoration: BoxDecoration(
                      border: Border(
                          left: BorderSide(color: Color(0XFF001a3e), width: 5)),
                      color: Colors.white,
                    ),
                    padding: EdgeInsets.all(10.0),
                    alignment: Alignment.topCenter,
                    child: Container(
                      child: ListTile(
                        title: Text("Demande d'attestation"),
                        trailing: IconButton(
                            onPressed: () => {
                                  showModalBottomSheet(
                                    shape: RoundedRectangleBorder(
                                                            borderRadius:
                                                                BorderRadius
                                                                    .circular(
                                                                        10.0)),
                                      context: context,
                                      builder: (context) {
                                        return Column(
                                          mainAxisSize: MainAxisSize.min,
                                          children: <Widget>[
                                             Container(child: Text("Demande d'attestation d'inscription"),padding: EdgeInsets.all(20),),
                                            Expanded(
                                              child: Stepper(
                                                steps: <Step>[
                                                  Step(
                                                      title: Text(
                                                          "Demande envoyé"),
                                                      content: Align(
                                                          alignment:
                                                              Alignment.topLeft,
                                                          child: Column(
                                                            children: [
                                                              Card(
                                                                shape:
                                                                    RoundedRectangleBorder(
                                                                  borderRadius:
                                                                      BorderRadius
                                                                          .circular(
                                                                              15.0),
                                                                ),
                                                                elevation: 5.0,
                                                                child: ClipPath(
                                                                  clipper: ShapeBorderClipper(
                                                                      shape: RoundedRectangleBorder(
                                                                          borderRadius:
                                                                              BorderRadius.circular(10))),
                                                                  child: Container(
                                                                      height: 60,
                                                                      decoration: BoxDecoration(
                                                                        border: Border(
                                                                            left:
                                                                                BorderSide(color: Colors.red, width: 10)),
                                                                        color: Colors
                                                                            .white,
                                                                      ),
                                                                      padding: EdgeInsets.all(10.0),
                                                                      alignment: Alignment.topCenter,
                                                                      child: Container(
                                                                        child: Text(
                                                                            "Votre demande a été bien reçu. Nous reviendrons vers vous dans un bref délai"),
                                                                      )),
                                                                ),
                                                              )
                                                            ],
                                                          )),
                                                      subtitle: Text("Terminé"),
                                                      isActive: true,
                                                      state:
                                                          StepState.complete),
                                                  Step(
                                                      title: Text(""),
                                                      content: Text(""),
                                                      subtitle: Text(""),
                                                      isActive: false,
                                                      state: StepState.indexed),
                                                  Step(
                                                      title: Text(""),
                                                      content: Text(
                                                          "Votre dossier manque de photo"),
                                                      subtitle: Text(""),
                                                      isActive: false,
                                                      state: StepState.indexed),
                                                  Step(
                                                      title: Text(""),
                                                      content: Text(""),
                                                      subtitle: Text(""),
                                                      isActive: false,
                                                      state: StepState.indexed),
                                                ],
                                                currentStep: _currentStep,
                                                onStepTapped: (index) {
                                                  setState(() {
                                                    _currentStep = index;
                                                  });
                                                },
                                                controlsBuilder: (BuildContext
                                                            context,
                                                        {VoidCallback?
                                                            onStepContinue,
                                                        VoidCallback?
                                                            onStepCancel}) =>
                                                    Container(),
                                              ),
                                            ),
                                          ],
                                        );
                                      }
                                      )
                                },
                            icon: Icon(Icons.remove_red_eye)),
                      ),
                    )),
              ),
            ),
            Card(
              shape: RoundedRectangleBorder(
                borderRadius: BorderRadius.circular(15.0),
              ),
              elevation: 5.0,
              child: ClipPath(
                clipper: ShapeBorderClipper(
                    shape: RoundedRectangleBorder(
                        borderRadius: BorderRadius.circular(10))),
                child: Container(
                    height: 70,
                    decoration: BoxDecoration(
                      border: Border(
                      left: BorderSide(color: Color(0XFF001a3e), width: 5)),
                      color: Colors.white,
                    ),
                    padding: EdgeInsets.all(10.0),
                    alignment: Alignment.topCenter,
                    child: Container(
                      child: ListTile(
                        title: Text("Demande d'attestation d'inscription"),
                        trailing: IconButton(
                            onPressed: () => {},
                            icon: Icon(Icons.remove_red_eye)),
                      ),
                    )),
              ),
            ),
            Card(
              shape: RoundedRectangleBorder(
                borderRadius: BorderRadius.circular(15.0),
              ),
              elevation: 5.0,
              child: ClipPath(
                clipper: ShapeBorderClipper(
                    shape: RoundedRectangleBorder(
                        borderRadius: BorderRadius.circular(10))),
                child: Container(
                    height: 70,
                    decoration: BoxDecoration(
                      border: Border(
                         left: BorderSide(color: Color(0XFF001a3e), width: 5)),
                      color: Colors.white,
                    ),
                    padding: EdgeInsets.all(10.0),
                    alignment: Alignment.topCenter,
                    child: Container(
                      child: ListTile(
                        title: Text("Demande d'attestation d'inscription"),
                        trailing: IconButton(
                            onPressed: () => {},
                            icon: Icon(Icons.remove_red_eye)),
                      ),
                    )),
              ),
            )
          ],
        ),
      ),),
      floatingActionButton: FloatingActionButton(
        child: Icon(Icons.add),
        onPressed: ()=>{
          Get.to(FavorisPage2()),
        },
      ),
    );
  }

  switchStepsType() {
    setState(() => stepperType == StepperType.vertical
        ? stepperType = StepperType.horizontal
        : stepperType = StepperType.vertical);
  }

  tapped(int step) {
    setState(() => _currentStep = step);
  }

  continued() {
    _currentStep < 2 ? setState(() => _currentStep += 1) : null;
  }

  cancel() {
    _currentStep > 0 ? setState(() => _currentStep -= 1) : null;
  }
}
